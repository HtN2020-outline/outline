[{"C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\index.js":"1","C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\App.js":"2","C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\serviceWorker.js":"3","C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\Test.js":"4","C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\popup\\index.js":"5"},{"size":527,"mtime":1610773465616,"results":"6","hashOfConfig":"7"},{"size":173,"mtime":1610783124286,"results":"8","hashOfConfig":"7"},{"size":5227,"mtime":1610773465616,"results":"9","hashOfConfig":"7"},{"size":154,"mtime":1610822880321,"results":"10","hashOfConfig":"7"},{"size":1956,"mtime":1610783124289,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"184vhb2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\index.js",[],["25","26"],"C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\App.js",["27"],"import React from 'react';\r\nimport Test from \"./Test\";\r\nimport PopupPage from './popup';\r\n\r\nfunction App() {\r\n  return (\r\n    <PopupPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\serviceWorker.js",[],"C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\Test.js",[],"C:\\Users\\robhn\\LocalGitRepos\\outline\\src\\popup\\index.js",["28"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nconst pageStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nfunction PopupPage(props) {\r\n  const classes = pageStyles();\r\n\r\n  let [name, setName] = React.useState(null);\r\n  let [email, setEmail] = React.useState(null);\r\n  let [file, setFile] = React.useState(null);\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userName\") {\r\n        setName(value);\r\n      } else if (name === \"userEmail\") {\r\n        setEmail(value);\r\n      } else if (name === \"file\") {\r\n        setFile(value);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          name=\"userName\"\r\n          value={name}\r\n          onChange={(event) => onChangeHandler(event)}\r\n          className=\"login__form__textinput\"\r\n          style={{ display: \"flex\", margin: \"1vw auto 0vw auto\" }}\r\n        />\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        name=\"userEmail\"\r\n        value={email}\r\n        onChange={(event) => onChangeHandler(event)}\r\n        className=\"login__form__textinput\"\r\n        style={{ display: \"flex\", margin: \"1vw auto 0vw auto\" }}\r\n      />\r\n      <Button>\r\n        <Input\r\n            id=\"outlined-basic\"\r\n            label=\"File\"\r\n            variant=\"outlined\"\r\n            name=\"file\"\r\n            value={email}\r\n            onChange={(event) => onChangeHandler(event)}\r\n            className=\"login__form__textinput\"\r\n            style={{ display: \"flex\", margin: \"1vw auto 0vw auto\" }}\r\n        />\r\n      </Button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupPage;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":19,"column":8,"nodeType":"35","messageId":"36","endLine":19,"endColumn":12},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]